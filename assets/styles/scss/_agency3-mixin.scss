// theme colors
@mixin text-emphasis-variant($parent, $color, $ignore-warning: false) {
  #{$parent} {
    color: $color !important;
  }
}

@mixin fill-variant($parent, $color, $ignore-warning: false) {
  #{$parent} {
    fill: $color !important;
  }
}

@mixin stroke-variant($parent, $color, $ignore-warning: false) {
  #{$parent} {
    stroke: $color !important;
    stroke-width: 1;
  }
}

@mixin background-color-variant($parent, $color, $ignore-warning: false) {
  #{$parent} {
    background-color: $color !important;
  }
}

@each $color, $value in $theme-colors {
  @include text-emphasis-variant(".text-#{$color}", $value, true);
}

@each $color, $value in $theme-colors {
  @include background-color-variant(".background-#{$color}", $value, true);
}

@each $color, $value in $theme-colors {
  @include fill-variant(".fill-#{$color}", $value, true);
}

@each $color, $value in $theme-colors {
  @include stroke-variant(".stroke-#{$color}", $value, true);
}


// spacing
@function breakpoint-infix($name, $grid-breakpoints: $breakpoints) {
  @return if(breakpoint-min($name, $grid-breakpoints) == null, "", "-#{$name}");
}

@function breakpoint-min($name, $grid-breakpoints: $breakpoints) {
  $min: map-get($grid-breakpoints, $name);
  @return if($min != 0, $min, null);
}

@each $grid-breakpoint in map-keys($breakpoints) {
  @include breakpoint($grid-breakpoint) {
    $infix: breakpoint-infix($grid-breakpoint, $breakpoints);

    @each $prop, $abbrev in (margin: m, padding: p) {
      @each $size, $length in $spacers {
        .#{$abbrev}#{$infix}-#{$size} { #{$prop}: $length !important; }
        .#{$abbrev}t#{$infix}-#{$size},
        .#{$abbrev}y#{$infix}-#{$size} {
          #{$prop}-top: $length !important;
        }
        /*.#{$abbrev}r#{$infix}-#{$size},
        .#{$abbrev}x#{$infix}-#{$size} {
          #{$prop}-right: $length !important;
        }*/
        .#{$abbrev}b#{$infix}-#{$size},
        .#{$abbrev}y#{$infix}-#{$size} {
          #{$prop}-bottom: $length !important;
        }
        /*.#{$abbrev}l#{$infix}-#{$size},
        .#{$abbrev}x#{$infix}-#{$size} {
          #{$prop}-left: $length !important;
        }*/
      }
    }

    // Negative margins (e.g., where `.mb-n1` is negative version of `.mb-1`)
    @each $size, $length in $spacers {
      @if $size != 0 {
        .m#{$infix}-n#{$size} { margin: -$length !important; }
        .mt#{$infix}-n#{$size},
        .my#{$infix}-n#{$size} {
          margin-top: -$length !important;
        }
        /*.mr#{$infix}-n#{$size},
        .mx#{$infix}-n#{$size} {
          margin-right: -$length !important;
        }*/
        .mb#{$infix}-n#{$size},
        .my#{$infix}-n#{$size} {
          margin-bottom: -$length !important;
        }
        /*.ml#{$infix}-n#{$size},
        .mx#{$infix}-n#{$size} {
          margin-left: -$length !important;
        }*/
      }
    }

    // Some special margin utils
    .m#{$infix}-auto { margin: auto !important; }
    .mt#{$infix}-auto,
    .my#{$infix}-auto {
      margin-top: auto !important;
    }
    /*.mr#{$infix}-auto,
    .mx#{$infix}-auto {
      margin-right: auto !important;
    }*/
    .mb#{$infix}-auto,
    .my#{$infix}-auto {
      margin-bottom: auto !important;
    }
    /*.ml#{$infix}-auto,
    .mx#{$infix}-auto {
      margin-left: auto !important;
    }*/
  }
}


// positions
@each $position in $positions {
  .position-#{$position} { position: $position !important; }
}
